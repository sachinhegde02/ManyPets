{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.9.3", "generated_at": "2025-03-17T23:03:35.937905Z", "invocation_id": "3c18e51a-75b2-4405-a52d-db155be4387b", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-17T23:03:25.394324Z", "completed_at": "2025-03-17T23:03:25.417843Z"}, {"name": "execute", "started_at": "2025-03-17T23:03:25.417843Z", "completed_at": "2025-03-17T23:03:27.400786Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 2.0064616203308105, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01bb13e2-0000-e440-0001-b3ce0003406e"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.ManyPets.stg_order_complete", "compiled": true, "compiled_code": "\n\nWITH source_data AS (\n    SELECT\n        data:detail:order_id::STRING        AS order_id,\n        data:detail:intent::STRING          AS intent,\n        data:detail:tenant::STRING          AS tenant,\n        data:detail:customer_id::STRING     AS customer_id,\n        pet.value                           AS pet_id,  \n        data:time::TIMESTAMP                AS order_time,\n        data:source::STRING                 AS source,\n        data:type::STRING                   AS type,\n        ingest_date                         AS ingest_date\n    FROM dev.rdl.order_complete o,\n    LATERAL FLATTEN(input => o.data:detail:pet_ids,OUTER => TRUE) AS pet  \n\n    \n)\n,\ndedup AS (\n    SELECT \n        *,\n        ROW_NUMBER() OVER ( PARTITION BY order_id, customer_id, pet_id ORDER BY ingest_date DESC ) AS rnk\n    FROM source_data\n)\nSELECT \n    order_id,\n    customer_id,\n    pet_id,\n    intent,\n    tenant,\n    order_time::DATE            AS order_complete_date,\n    order_time                  AS order_complete_timestamp,\n    source,\n    type,\n    ingest_date\nFROM dedup\nWHERE rnk =1", "relation_name": "DEV.staging.stg_order_complete", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-17T23:03:27.416392Z", "completed_at": "2025-03-17T23:03:27.422915Z"}, {"name": "execute", "started_at": "2025-03-17T23:03:27.422915Z", "completed_at": "2025-03-17T23:03:29.146722Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.7303295135498047, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01bb13e2-0000-e435-0001-b3ce00036072"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.ManyPets.stg_orders", "compiled": true, "compiled_code": "\n\nWITH source_data AS (\n    SELECT\n        data:detail:order_id::STRING                    AS order_id,\n        data:detail:customer:email::STRING              AS email,\n        data:detail:customer:first_name::STRING         AS first_name,\n        data:detail:customer:last_name::STRING          AS last_name,\n        data:detail:customer:dob::DATE                  AS dob,\n        data:detail:customer:phone::STRING              AS phone,\n        data:detail:customer:address:line1::STRING      AS address_line1,\n        data:detail:customer:address:line2::STRING      AS address_line2,\n        data:detail:customer:address:city::STRING       AS city,\n        data:detail:customer:address:country::STRING    AS country,\n        data:detail:customer:address:postcode::STRING   AS postcode,\n        pet.value:name::STRING                          AS pet_name,\n        pet.value:dob::DATE                             AS pet_dob,\n        pet.value:breed_value::STRING                   AS pet_breed,\n        pet.value:gender::STRING                        AS pet_gender,\n        pet.value:species::STRING                       AS pet_species,\n        pet.value:pedigree_type::STRING                 AS pedigree_type,\n        pet.value:spayed_neutered::BOOLEAN              AS spayed_neutered,\n        pet.value:postcode::STRING                      AS pet_postcode,\n        pet.value:value::NUMBER                         AS pet_value,\n        data:detail:effective_date::DATE                AS order_effective_date,\n        data:detail:cessation_date::DATE                AS cessation_date,\n        data:detail:affiliate_code::STRING              AS affiliate_code,\n        data:source::STRING                             AS source,\n        data:type::STRING                               AS type,\n        data:detail:intent::STRING                      AS intent,\n        data:detail:tenant::STRING                      AS tenant,\n        data:time::TIMESTAMP                            AS order_time,\n        ingest_date\n    FROM dev.rdl.orders o,\n    LATERAL FLATTEN(input => o.data:detail:pets,OUTER => TRUE) AS pet\n\n    \n),\ndedup AS\n(\n    SELECT\n        *\n        ,ROW_NUMBER() OVER(PARTITION BY order_id, email, pet_dob, pet_name, pet_breed  ORDER BY ingest_date DESC) AS rnk\n    FROM source_data\n)\nSELECT \n    order_id ,\n    email                                                       AS customer_email,\n    COALESCE(NULLIF(TRIM(COALESCE(first_name, '') || ' ' || \n            COALESCE(last_name, '')), ''), 'unknown')           AS customer_name,\n    dob                                                         AS customer_dob,\n    COALESCE(phone,'unknown')                                   AS customer_phone,\n    address_line1 || ' ' || address_line2                       AS customer_address,\n    city                                                        AS customer_city,\n    country                                                     AS customer_country,\n    postcode                                                    AS customer_postcode,\n    pet_dob,\n    pet_name,\n    pet_breed,\n    pet_gender,\n    pet_species,\n    pedigree_type,\n    spayed_neutered,\n    pet_postcode,\n    pet_value,\n    order_time::DATE                                            AS order_create_date,\n    order_time                                                  AS order_create_timestamp,\n    cessation_date,\n    affiliate_code,\n    source,\n    type,\n    intent,\n    tenant,\n    order_effective_date,\n    ingest_date\nFROM dedup\nWHERE \n    rnk =1", "relation_name": "DEV.staging.stg_orders", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-17T23:03:29.163161Z", "completed_at": "2025-03-17T23:03:29.186491Z"}, {"name": "execute", "started_at": "2025-03-17T23:03:29.186491Z", "completed_at": "2025-03-17T23:03:30.400155Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.2399957180023193, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01bb13e2-0000-e41d-0001-b3ce0002920a"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.ManyPets.dim_customers", "compiled": true, "compiled_code": "\nWITH stg_data AS (\n    SELECT\n        customer_email,\n        customer_name,\n        customer_dob,\n        customer_phone,\n        customer_address,\n        customer_city,\n        customer_country,\n        customer_postcode,\n        ingest_date  \n    FROM DEV.staging.stg_orders\n    \n    \n),\ndedup AS (\n    SELECT\n        customer_email,\n        customer_name,\n        customer_dob,\n        customer_phone,\n        customer_address,\n        customer_city,\n        customer_country,\n        customer_postcode,\n        ingest_date,\n        ROW_NUMBER() OVER (PARTITION BY customer_email ORDER BY ingest_date DESC) AS rnk\n    FROM stg_data\n)\nSELECT\n    customer_email                                                          AS customer_nk, \n    md5(cast(coalesce(cast(customer_nk as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT))                 AS customer_sk,\n    customer_name,\n    customer_dob,\n    customer_phone,\n    customer_address,\n    customer_city,\n    customer_country,\n    customer_postcode,\n    ingest_date\nFROM dedup\nWHERE rnk = 1", "relation_name": "DEV.odl.dim_customers", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-17T23:03:30.415356Z", "completed_at": "2025-03-17T23:03:30.415356Z"}, {"name": "execute", "started_at": "2025-03-17T23:03:30.430986Z", "completed_at": "2025-03-17T23:03:31.874619Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.4592630863189697, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01bb13e2-0000-e3e0-0001-b3ce0003108a"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.ManyPets.dim_pets", "compiled": true, "compiled_code": "\n\nWITH stg_data AS (\n    SELECT\n        customer_email,\n        pet_dob,\n        pet_name,\n        pet_breed,\n        pet_gender,\n        pet_species,\n        pedigree_type,\n        spayed_neutered,\n        pet_postcode,\n        pet_value,\n        ingest_date\n    FROM DEV.staging.stg_orders\n    \n    \n),\n\ndedup AS (\n    SELECT\n        customer_email,\n        pet_dob,\n        pet_name,\n        pet_breed,\n        pet_gender,\n        pet_species,\n        pedigree_type,\n        spayed_neutered,\n        pet_postcode,\n        pet_value,\n        ingest_date,\n        ROW_NUMBER() OVER(PARTITION BY customer_email, pet_dob, pet_name, pet_breed ORDER BY ingest_date DESC) AS rnk\n    FROM stg_data\n)\nSELECT\n    d.customer_email ||'|'||d.pet_name || '|' || d.pet_dob || '|' || d.pet_breed      AS pet_nk,  \n    md5(cast(coalesce(cast(pet_nk as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT))                                AS pet_sk,  \n    d.pet_name,\n    d.pet_dob,\n    d.pet_breed,\n    d.pet_gender,\n    d.pet_species,\n    d.pedigree_type,\n    d.spayed_neutered,\n    d.pet_postcode,\n    d.pet_value,\n    d.ingest_date,\n    c.customer_sk\nFROM dedup AS d\n    INNER JOIN DEV.odl.dim_customers AS c ON (c.customer_nk=d.customer_email)\nWHERE d.rnk = 1", "relation_name": "DEV.odl.dim_pets", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-17T23:03:31.886147Z", "completed_at": "2025-03-17T23:03:31.900863Z"}, {"name": "execute", "started_at": "2025-03-17T23:03:31.902920Z", "completed_at": "2025-03-17T23:03:33.597528Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.7229092121124268, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01bb13e2-0000-e42d-0001-b3ce0002b08a"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.ManyPets.fact_order_complete", "compiled": true, "compiled_code": " \n\nWITH fact_data AS (\n    SELECT\n        s.order_id,\n        s.intent,\n        s.tenant,\n        s.source,\n        s.type,\n        s.ingest_date,\n        s.order_complete_date,\n        s.order_complete_timestamp,\n        c.customer_sk,\n        p.pet_sk\n    FROM DEV.staging.stg_order_complete s\n    LEFT JOIN DEV.odl.dim_customers c \n        ON s.customer_id = c.customer_nk   \n    LEFT JOIN DEV.odl.dim_pets p \n        ON s.pet_id = p.pet_nk \n\n               \n),\ndedup AS (\n    SELECT \n        *,\n        ROW_NUMBER() OVER ( PARTITION BY order_id ORDER BY ingest_date DESC ) AS rnk\n    FROM fact_data\n)\n\nSELECT \n    --order_id || '|' || customer_sk || '|' || pet_sk       AS order_nk,\n    --customer_sk and pet_sk will be null \n    order_id                                                AS order_nk,\n    md5(cast(coalesce(cast(order_nk as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT))    AS order_sk,\n    -- order_id is added as connecting between order and order_complete on order_sk is not feasible due to missing customer_id and pet_id in the dataset.\n    order_id                                                AS order_id,\n    customer_sk                                             AS customer_sk,\n    pet_sk                                                  AS pet_sk,\n    intent                                                  AS intent,\n    tenant                                                  AS tenant,\n    order_complete_date                                     AS order_complete_date,\n    order_complete_timestamp                                AS order_complete_timestamp,\n    source                                                  AS order_complete_source,\n    type                                                    AS order_complete_type,\n    ingest_date                                             AS ingest_date\nFROM dedup\nWHERE rnk = 1", "relation_name": "DEV.odl.fact_order_complete", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-17T23:03:33.617043Z", "completed_at": "2025-03-17T23:03:33.626891Z"}, {"name": "execute", "started_at": "2025-03-17T23:03:33.626891Z", "completed_at": "2025-03-17T23:03:35.589688Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.9765384197235107, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01bb13e2-0000-e42c-0001-b3ce0002c092"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.ManyPets.fact_orders", "compiled": true, "compiled_code": " \nWITH fact_data AS (\n    SELECT \n        f.order_id,\n        f.cessation_date,\n        f.affiliate_code,\n        f.pet_value,\n        f.source,\n        f.type,\n        f.order_create_date,\n        f.order_create_timestamp,\n        f.intent,\n        f.tenant,\n        /*f.event_time,\n        f.envelope_version,\n        f.detail_version,\n        f.experiments,*/\n        c.customer_sk,\n        p.pet_sk,\n        f.ingest_date\n    FROM DEV.staging.stg_orders f\n    LEFT JOIN DEV.odl.dim_customers c \n        ON f.customer_email = c.customer_nk\n    LEFT JOIN DEV.odl.dim_pets p \n        ON f.pet_name = p.pet_name \n        AND f.pet_dob = p.pet_dob\n        AND f.pet_breed = p.pet_breed\n\n    \n)\n\n, dedup AS (\n    SELECT \n        f.*,\n        ROW_NUMBER() OVER(PARTITION BY f.order_id, f.customer_sk, f.pet_sk ORDER BY f.ingest_date DESC) AS rnk\n    FROM fact_data f\n)\n\nSELECT \n     order_id || '|' || customer_sk || '|'|| pet_sk         AS order_nk,\n    md5(cast(coalesce(cast(order_nk as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT))    AS order_sk,\n    -- order_id is added as connecting between order and order_complete on order_sk is not feasible due to missing customer_id and pet_id in the dataset.\n    order_id                                                AS order_id,\n    customer_sk                                             AS customer_sk,\n    pet_sk                                                  AS pet_sk,\n    order_create_date                                       AS order_create_date,\n    order_create_timestamp                                  AS order_create_timestamp,\n    cessation_date                                          AS cessation_date,\n    COALESCE(affiliate_code, 'unknown')                     AS affiliate_code,\n    pet_value                                               AS pet_value,\n    source                                                  AS order_source,\n    type                                                    AS order_type,\n    intent                                                  AS intent,\n    tenant                                                  AS tenant,\n/*\n    event_time,\n    envelope_version,\n    detail_version,\n    intent,\n    tenant,\n    experiments,\n*/\n    ingest_date\nFROM dedup\nWHERE rnk = 1", "relation_name": "DEV.odl.fact_orders", "batch_results": null}], "elapsed_time": 12.248282194137573, "args": {"select": [], "log_level_file": "debug", "warn_error_options": {"include": [], "exclude": []}, "which": "run", "empty": false, "strict_mode": false, "printer_width": 80, "project_dir": "C:\\Users\\HP\\Documents\\manypets\\ManyPets", "skip_nodes_if_on_run_start_fails": false, "defer": false, "log_path": "C:\\Users\\HP\\Documents\\manypets\\ManyPets\\logs", "static_parser": true, "use_colors_file": true, "macro_debugging": false, "require_resource_names_without_spaces": false, "profiles_dir": "C:\\Users\\HP\\.dbt", "state_modified_compare_vars": false, "version_check": true, "log_level": "info", "require_explicit_package_overrides_for_builtin_materializations": true, "require_batched_execution_for_custom_microbatch_strategy": false, "show_resource_report": false, "populate_cache": true, "state_modified_compare_more_unrendered_values": false, "indirect_selection": "eager", "log_format": "default", "vars": {}, "write_json": true, "cache_selected_only": false, "partial_parse_file_diff": true, "require_nested_cumulative_type_params": false, "require_yaml_configuration_for_mf_time_spines": false, "exclude": [], "send_anonymous_usage_stats": true, "source_freshness_run_project_hooks": false, "partial_parse": true, "log_file_max_bytes": 10485760, "invocation_command": "dbt run", "use_colors": true, "log_format_file": "debug", "quiet": false, "favor_state": false, "introspect": true, "print": true}}